{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thewi\\\\Downloads\\\\scrimba\\\\counter\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [count, setCount] = useState(0);\n  /**\r\n   * Note: if you ever need the old value of state\r\n   * to help you determine the new value of state,\r\n   * you should pass a callback function to your\r\n   * state setter function instead of using\r\n   * state directly. This callback function will\r\n   * receive the old value of state as its parameter,\r\n   * which you can then use to determine your new\r\n   * value of state.\r\n   */\n\n  function add() {\n    setCount(prevCount => prevCount + 1);\n  }\n\n  function subtract() {\n    setCount(prevCount => prevCount1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"counter\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"counter--minus\",\n      onClick: subtract,\n      children: \"\\u2013\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"counter--count\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"counter--plus\",\n      onClick: add,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"oDgYfYHkD9Wkv4hrAPCkI/ev3YU=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","App","count","setCount","add","prevCount","subtract","prevCount1"],"sources":["C:/Users/thewi/Downloads/scrimba/counter/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function App() {\r\n\tconst [count, setCount] = useState(0);\r\n\t/**\r\n\t * Note: if you ever need the old value of state\r\n\t * to help you determine the new value of state,\r\n\t * you should pass a callback function to your\r\n\t * state setter function instead of using\r\n\t * state directly. This callback function will\r\n\t * receive the old value of state as its parameter,\r\n\t * which you can then use to determine your new\r\n\t * value of state.\r\n\t */\r\n\tfunction add() {\r\n\t\tsetCount((prevCount) => prevCount + 1);\r\n\t}\r\n\r\n\tfunction subtract() {\r\n\t\tsetCount((prevCount) => prevCount1);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='counter'>\r\n\t\t\t<button className='counter--minus' onClick={subtract}>\r\n\t\t\t\tâ€“\r\n\t\t\t</button>\r\n\t\t\t<div className='counter--count'>\r\n\t\t\t\t<h1>{count}</h1>\r\n\t\t\t</div>\r\n\t\t\t<button className='counter--plus' onClick={add}>\r\n\t\t\t\t+\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,eAAe,SAASC,GAAT,GAAe;EAAA;;EAC7B,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,CAAD,CAAlC;EACA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACC,SAASI,GAAT,GAAe;IACdD,QAAQ,CAAEE,SAAD,IAAeA,SAAS,GAAG,CAA5B,CAAR;EACA;;EAED,SAASC,QAAT,GAAoB;IACnBH,QAAQ,CAAEE,SAAD,IAAeE,UAAhB,CAAR;EACA;;EAED,oBACC;IAAK,SAAS,EAAC,SAAf;IAAA,wBACC;MAAQ,SAAS,EAAC,gBAAlB;MAAmC,OAAO,EAAED,QAA5C;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADD,eAIC;MAAK,SAAS,EAAC,gBAAf;MAAA,uBACC;QAAA,UAAKJ;MAAL;QAAA;QAAA;QAAA;MAAA;IADD;MAAA;MAAA;MAAA;IAAA,QAJD,eAOC;MAAQ,SAAS,EAAC,eAAlB;MAAkC,OAAO,EAAEE,GAA3C;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAPD;EAAA;IAAA;IAAA;IAAA;EAAA,QADD;AAaA;;GAjCuBH,G;;KAAAA,G"},"metadata":{},"sourceType":"module"}